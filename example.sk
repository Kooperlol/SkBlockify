# Loading stage
on join:
    if stage "farm-%uuid of player%" is set:
        stop
    create stage with name "farm-%uuid of player%" between {-crop-loc1} and {-crop-loc2} in world("spawn") for player
    set {_stage} to stage "farm-%uuid of player%"
    set chunks sent per tick to 20 for stage {_stage}
    create view for stage {_stage} with name "farm" with pattern "WHEAT[AGE=7]:1.0" that is breakable
    set {_view} to view "farm" in stage {_stage}
    add blocks from {_locations::*} to view {_view}
    send blocks to audience in stage {_stage}

# harvesting.sk
on load:
    # Regrow a crop
    create new section with {_location}, {_blockdata}, {_view}, and {_stage} stored in {-section::CropRegrow}:
        loop 7 times:
            set block data tag "age" of {_blockdata} to loop-value
            set block at {_location} to {_blockdata} in view {_view}
            refresh block to audience in stage {_stage} at {_location}
            wait 1 tick
    # Regrow crops
    create new section with {_locations::*}, {_blockdata}, {_view}, and {_stage} stored in {-section::CropsRegrow}:
        loop 7 times:
            set block data tag "age" of {_blockdata} to loop-value
            set blocks at {_locations::*} to {_blockdata} in view {_view}
            refresh blocks to audience in stage {_stage} at {_locations::*}
            wait 1 tick
    # Set blocks to air & regrow
    create new section with {_locations::*}, {_blockdata}, {_view}, and {_stage} stored in {-section::SetBlocksToAir}:
        set blocks at {_locations::*} to air in view {_view}
        refresh blocks to audience in stage {_stage} at {_locations::*}
        wait 5 seconds
        run section {-section::CropsRegrow} with {_locations::*}, {_blockdata}, {_view}, and {_stage}
    # Explosive
    create new section with {_player}, {_location}, {_blockdata}, {_view}, and {_stage} stored in {-section::Explosive}:
        set {_explosion} to packets_randomEntityId()
        packets_spawnEntity({_player}, primed tnt, {_location} ~ vector(0, 3, 0), {_explosion})
        set {_metadata} to packets_createMetadata()
        playSound("entity.creeper.primed", {_player})
        packets_setEntityVelocity({_player}, {_explosion}, 0, -1, 0)
        packets_entityMetadata({_player}, {_explosion}, {_metadata})
        wait 2 seconds
        playSound("entity.generic.explode", {_player})
        run section {-section::SetBlocksToAir} with (blocks in radius 3 of {_location}), {_blockdata}, {_view}, and {_stage}
        packets_destroyEntity({_player}, {_explosion})

# Delete stage
on quit:
    if stage "farm-%uuid of player%" is not set:
        stop
    delete stage (stage "farm-%uuid of player%")

# Farming
on blockify break:
    # Check if player is holding a hoe
    if nbt compound of player's tool does not have tag "HOE":
        cancel event
        sendError(player, "You can only farm with a hoe!")
        playSound("ENTITY_VILLAGER_NO", player)
        stop

    # Check if what is grown
    if block data tag "age" of event-blockdata is not 7:
        cancel event
        stop

    # Explosive
    set {_explosive} to getEnchant(player's tool, "explosive")
    if all:
        {_explosive} > 0
        getProc(player's tool, "explosive")
    then:
        run section {-section::Explosive} with player, event-location, event-blockdata, event-view, and event-stage

    # Regrow crop
    wait 5 seconds
    loop 7 times:
        set block data tag "age" of event-blockdata to loop-value
        set block at event-location to event-blockdata in view event-view
        refresh block to audience in stage event-stage at event-location
        wait 1 tick
